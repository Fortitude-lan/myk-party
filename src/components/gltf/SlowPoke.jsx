/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 .\public\models\slowPoke_anims.glb -k 
*/

import React, { useRef, useState, useEffect } from "react";
import { useGLTF, useAnimations, Html } from "@react-three/drei";
import {
  CuboidCollider,
  CylinderCollider,
  RigidBody,
  BallCollider,
  InstancedRigidBodies,
  CapsuleCollider,
} from "@react-three/rapier";
import { Button, Popover } from "antd";
import { useGlobalContext } from "../../hook/globalContext";

export function SlowPoke(props) {
  const group = useRef();
  const { handleIsCollision } = useGlobalContext();
  const [isTouch, setisTouch] = useState(false);
  const { nodes, scene, materials, animations } = useGLTF(
    "/models/slowPoke_anims.glb"
  );
  const audioRef = useRef(new Audio("/sounds/SlowPoke.wav"));
  
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    actions["call"].reset().fadeIn(0.5).play();
  }, []);
  // 设置自发光材质
  const emissionMaterial = (ref) => {
    ref.current.traverse((child) => {
      if (child.isMesh && child.material) {
        if (Array.isArray(child.material)) {
          child.material.forEach(setEmissive);
        } else {
          const m = child.material;
          m.emissive = m.color;
          m.emissiveMap = m.map;
          m.emissiveIntensity = 0.25;
        }
      }
    });
  };
  useEffect(() => {
    // 遍历模型中的每个材质并设置自发光
    if (group.current) emissionMaterial(group);
  }, []);
  return (
    <group ref={group} {...props} dispose={null}>
      <RigidBody
        name="呆呆兽"
        colliders={false}
        type="fixed"
        onCollisionEnter={({ manifold, target, other }) => {
          console.log(
            "Collision at world position ",
            manifold.solverContactPoint(0)
          );

          if (
            other.rigidBodyObject &&
            other.rigidBodyObject.name === "character"
          ) {
            console.log(
              target.rigidBodyObject.name,
              " collided with ",
              other.rigidBodyObject.name
            );
            audioRef.current.play();
            setisTouch(true);
            handleIsCollision("slowpoke");
          }
        }}
        onCollisionExit={() => {
          console.log("离开了呆呆兽");
          audioRef.current.pause();
          setisTouch(false);
        }}
      >
        <primitive object={scene} />
        <CapsuleCollider args={[0.8, 0.4]} position={[0,0,0.2]}/>
        <BallCollider args={[0.35]} position={[0, 0.4, -0.6]} />
        <Html
          position={[-0.5, 1, 0]}
          wrapperClass="label"
          center
          distanceFactor={6}
          occlude={[group]}
        >
          <Popover
            trigger="hover"
            open={isTouch}
            content={
              <div>
                <p>MYK,你来啦！看来你听到我的呼唤了</p>
                <p>祝你生日快乐o(*￣▽￣*)ブ 最喜欢你了！</p>
              </div>
            }
            title="Ivysaur :"
          >
            <Button type={`primary ${isTouch && "touch"}`}>Hi! MYk</Button>
          </Popover>
        </Html>
      </RigidBody>
    </group>
  );
}

useGLTF.preload("/models/slowPoke_anims.glb");
